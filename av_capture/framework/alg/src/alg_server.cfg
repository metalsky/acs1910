var osalGlobal = xdc.useModule('ti.sdo.ce.osal.Global');
osalGlobal.runtimeEnv = osalGlobal.LINUX;

environment['xdc.cfg.check.fatal'] = 'false';

var RMAN = xdc.useModule('ti.sdo.fc.rman.RMAN');
RMAN.useDSKT2 = false;
RMAN.persistentAllocFxn = "__ALG_allocMemory";
RMAN.persistentFreeFxn = "__ALG_freeMemory";
RMAN.semCreateFxn = "Sem_create";
RMAN.semDeleteFxn = "Sem_delete";
RMAN.semPendFxn = "Sem_pend";
RMAN.semPostFxn = "Sem_post";
RMAN.tableSize = 10;
RMAN.trace = false;
RMAN.debug = false;

var EDMA3 = xdc.useModule('ti.sdo.fc.edma3.Settings');
EDMA3.globalInit = true;
EDMA3.maxQdmaChannels = [10,10,10,10];
EDMA3.trace = false;
EDMA3.debug = false;
EDMA3.maxRequests = 256;

var vicp = xdc.useModule('ti.sdo.linuxutils.vicp.VICP');
vicp.debug = false;

var HDVICP = xdc.useModule('ti.sdo.fc.ires.hdvicp.HDVICP');
HDVICP.trace = false;
HDVICP.debug = false;

//Change this to VICP if the chip is not DM355
var VICP = xdc.useModule('ti.sdo.fc.ires.vicp.VICP2');
VICP.debug = false;

var VICPSYNC = xdc.useModule('ti.sdo.fc.vicpsync.VICPSYNC');
VICPSYNC.debug = false;

var HDVICPSYNC = xdc.useModule('ti.sdo.fc.hdvicpsync.HDVICPSYNC');
HDVICPSYNC.debug = false; 
HDVICPSYNC.trace = false; 

var VICP = xdc.useModule('ti.sdo.fc.memutils.MEMUTILS');

ADDRSPACE = xdc.useModule('ti.sdo.fc.ires.addrspace.ADDRSPACE');

var MEMTCM = xdc.useModule('ti.sdo.fc.ires.memtcm.MEMTCM');
MEMTCM.cmemBlockId = 1; //Since we use _1 in our insmod command.

var EDMA3CHAN = xdc.useModule('ti.sdo.fc.ires.edma3chan.EDMA3CHAN');
EDMA3CHAN.trace = false;
EDMA3CHAN.debug = false;

var LSP = xdc.useModule('ti.sdo.linuxutils.edma.EDMA');
LSP.debug = false;

var CMEM = xdc.useModule('ti.sdo.linuxutils.cmem.CMEM');

var ALG_MEM = xdc.useModule('ti.sdo.ce.alg.Settings'); 
ALG_MEM.useHeap = true;
ALG_MEM.useCache = true;

xdc.loadPackage("ti.sdo.ce.video2");
xdc.loadPackage("ti.sdo.fc.hdvicpsync"); 

/*
xdc.useModule("ti.sdo.fc.global.Settings").profile = "debug_trace";
*/

/*
 *  ======== Engine Configuration ========
 */

var IPRUN    	= xdc.useModule('ti.sdo.codecs.iprun.ce.IPRUN');
var KTNF 	= xdc.useModule('ti.sdo.codecs.ktnf.ce.KTNF');
var MPEG4ENC 	= xdc.useModule('ti.sdo.codecs.mpeg4enc.ce.MPEG4ENC');
var H264ENC 	= xdc.useModule('ti.sdo.codecs.h264enc.ce.H264ENC');
var JPEGENC 	= xdc.useModule('ti.sdo.codecs.jpegenc.ce.JPEGENC');
var AACLC_ENC 	= xdc.useModule('ittiam.codecs.aaclc_enc.ce.AACLC_ENC');
var AAC_DEC 	= xdc.useModule('ittiam.codecs.aac_dec.ce.AAC_DEC');
var G711ENC 	= xdc.useModule('ti.sdo.ce.examples.codecs.g711.G711ENC');
var G711DEC 	= xdc.useModule('ti.sdo.ce.examples.codecs.g711.G711DEC');

var Engine = xdc.useModule('ti.sdo.ce.Engine');
var myEngine = Engine.create("alg_server", [
    {name: "g711enc", mod: G711ENC, local: true, groupId: 1},
    {name: "g711dec", mod: G711DEC, local: true, groupId: 1},
    {name: "aaclc_enc", mod: AACLC_ENC, local: true, groupId: 1},
    {name: "aac_dec", mod: AAC_DEC, local: true, groupId: 1},
    {name: "h264enc", mod: H264ENC, local: true, groupId: 1},
    {name: "mpeg4enc", mod: MPEG4ENC, local: true, groupId: 1},
    {name: "jpegenc", mod: JPEGENC, local: true, groupId: 1}, 
    {name: "ktnf", mod: KTNF, local: true, groupId: 2},
    {name: "iprun", mod: IPRUN, local: true, groupId: 2},
]);

Program.main = null;
